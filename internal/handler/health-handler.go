package handler

import (
	"net/http"

	env "github.com/csye7125-su24-team06/webapp-cve-consumer/internal"
	"github.com/csye7125-su24-team06/webapp-cve-consumer/internal/kafka"
	"github.com/csye7125-su24-team06/webapp-cve-consumer/pkg/database"
)

func ReadinessCheck(w http.ResponseWriter, r *http.Request) {
	pgDB, err := database.DataSource.DB()
	if err != nil {
		w.WriteHeader(http.StatusServiceUnavailable)
	}

	if err := pgDB.Ping(); err != nil {
		w.WriteHeader(http.StatusServiceUnavailable)
	}

	if err := kafka.KafkaConsumerObject.Ping(); err != nil {
		w.WriteHeader(http.StatusServiceUnavailable)
	}

	w.WriteHeader(http.StatusOK)
}

func LivenessCheck(w http.ResponseWriter, r *http.Request) {

	if !env.GlobalContextInstance.IsAlive() {
		w.WriteHeader(http.StatusServiceUnavailable)
		return
	}

	w.WriteHeader(http.StatusOK)
}
